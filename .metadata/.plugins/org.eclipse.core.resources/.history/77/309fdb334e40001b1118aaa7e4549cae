import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;

public class MipsToHex {
	
	MipsToHex(String lookupTablePath, String startPoint, String inputFile, String outputFile) {
		//taking path of absolute directory
		String mainPath = System.getProperty("user.dir");
		
		lookupTablePath = mainPath + lookupTablePath;
		// read lookup table from .txt file and create it
		LookupTable lookupTable = new LookupTable(lookupTablePath);	
		
		// create the window items for main menu
		JFrame fr = new JFrame("Mips To Hex");
		 
		JButton Interactive = new JButton("Interactive");
		JButton Batch = new JButton("Batch");
		JButton exit = new JButton("Exit");
		Interactive.setBounds(200,100,95,30);
		Batch.setBounds(200,150,95,30);
		exit.setBounds(200,200,95,30);
		// created the window items
				
		// add all items on the window
		fr.add(Interactive);
		fr.add(Batch);
		fr.add(exit);
		
		fr.setSize(500,500);
		fr.setLayout(null);
		fr.setVisible(true);
		// end GUI
		

		// exit button function
		exit.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
				}
		});
		
		// interactive mode
		Interactive.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				new Interactive(lookupTable, startPoint);
			}
		});
		
		// batch mode
		Batch.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				String[] tokens;
				String label;
				String opcodeS;
				String rest;
				int indexL=-1;
				int indexB=-1;
				ArrayList<String> labels = new ArrayList<String>() ;
		    	ArrayList<String> tokens2 = new ArrayList<String>() ;
		    	ArrayList<String> tokens3 = new ArrayList<String>() ;
		    	ArrayList<Integer> labelsIndex = new ArrayList<Integer>() ;
				Scanner scanner = new Scanner(new File(mainPath + inputFile));	//path of input file
				Scanner scanner1 = new Scanner(new File(mainPath + inputFile));	
				while (scanner1.hasNextLine()) {	//First read all the lines for detecting label names and corresponding index.
					indexL++;
					I = scanner1.nextLine().trim();
	    			
	    			
	    			tokens = I.split("[ ]+");
	    			
	    			if (tokens.length==3) {
	    				label = tokens[0];
						opcodeS = tokens[1];
						rest = tokens[2];
						label=label.substring(0,label.length()-1);
						labels.add(label);
						labelsIndex.add(indexL);
	    			}
	    			
				}
			}
		});
		
	}

}
